{"version":3,"sources":["Sections/Header.js","Sections/Bio.js","Components/SkillCard.js","Sections/Skills.js","Components/ProjectCard.js","Sections/Projects.js","Sections/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","name","class","src","alt","className","href","Bio","portrait_src","bio_description","loading","width","height","SkillCard","title","skills","icon","map","skill","index","key","Skills","id","ProjectCard","technologies","repoLink","image","val","target","rel","Projects","projects","project","renderProjects","Footer","github","resume","linkedin","App","ResumeInfo","resume_link","github_link","linkedin_link","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe979ba5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ name }) => {\n  return (\n    <header class=\"header\">\n      <div class=\"header-logo-box\">\n        <img src=\"images/logo.png\" alt=\"Chris\" class=\"header-logo\" />\n      </div>\n      <div class=\"header__text-box\">\n        <h1 class=\"heading-primary\">\n          <span className=\"heading-primary-main\">{name} </span>\n          <span className=\"heading-primary-sub\">Front End Developer</span>\n        </h1>\n        <a href=\"#projects\" class=\"btn btn--white btn--animated\">\n          View my work\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Bio = ({ name, portrait_src, bio_description }) => {\n  return (\n    <section class=\"section-about\">\n      {/* <h2 class=\"bio-header\">about</h2> */}\n      <div class=\"bio\">\n        <div class=\"bio_container\">\n          <div class=\"bio_img\">\n            <img\n              alt={name + \" \"}\n              class=\"bio_img_img\"\n              loading=\"lazy\"\n              src={portrait_src}\n              width=\"250\"\n              height=\"250\"\n            />\n          </div>\n          <div class=\"bio_text\">\n            <div class=\"bio_text_main\">Let me tell you a few things...</div>\n            <div class=\"bio_text_sub\">{bio_description}</div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\n\nconst SkillCard = ({ title, skills, icon }) => {\n  function renderSkills() {\n    if (skills) {\n      return skills.map((skill, index) => {\n        return <li key={index}>{skill}</li>;\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <div class=\"skill-box\">\n      <div class=\"skill-box-icon\">{icon && <i class={icon}></i>}</div>\n      <h3 class=\"skill-box-title\">{title}</h3>\n      <div class=\"skill-box-text\">\n        <ul>{renderSkills()}</ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SkillCard;\n\n// <div class=\"card\">\n//   <div class=\"card__side card__side--front card__side--front-2\">\n//     <div class=\"card__picture card__picture--2\">&nbsp;</div>\n//     <img\n//       src=\"img/fire.gif\"\n//       class=\"card__svg-icon card__svg-icon-2\"\n//       alt=\"\"\n//     />\n//     <div class=\"card__heading\">\n//       <span class=\"card__heading-span--2\">Instalava Picture App</span>\n//     </div>\n//     <div class=\"card__details\">\n//       <ul>\n//         <li>React | Redux</li>\n//         <li>SemanticUI</li>\n//         <li>Express | NodeJS</li>\n//         <li>PostgreSQL</li>\n//       </ul>\n//     </div>\n//     <div class=\"card__side card__side--back card__side--back-2\">\n//       <div class=\"card__cta\">\n//         <div class=\"card__box\">\n//           <div class=\"card__description\">\n//             <p>\n//               Instagram-inspired picture app with feed, profiles, followers\n//             </p>\n//           </div>\n//         </div>\n//         <a href=\"#popup-2\" class=\"btn btn--white btn--github\">\n//           Demo\n//         </a>\n//       </div>\n//     </div>\n//   </div>\n// </div>\n","import React from \"react\";\nimport SkillCard from \"../Components/SkillCard\";\n\nconst Skills = ({ skills }) => {\n  function renderSkills() {\n    if (skills) {\n      return skills.map((skill, index) => {\n        return (\n          <SkillCard\n            key={index}\n            title={skill.title}\n            skills={skill.skills}\n            icon={skill.icon}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <section class=\"section-skills\" id=\"skills\">\n      {/* <div class=\"skills-header\">\n        <h2 class=\"skills-header-text\">Skills</h2>\n      </div> */}\n      <div class=\"skills-container\">{renderSkills()}</div>\n    </section>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\n\nconst ProjectCard = ({ title, technologies, repoLink, image }) => {\n  function renderTechnologies() {\n    if (technologies) {\n      return technologies.map((val, index) => {\n        return <li key={index}>{val}</li>;\n      });\n    }\n\n    return null;\n  }\n\n  return (\n    <div class=\"card\">\n      <div class=\"card__side card__side--front\">\n        <div class={\"card__picture card__picture__\" + image}>&nbsp;</div>\n        <h3 class=\"card__heading\">\n          <span class=\"card__heading-span\">{title}</span>\n        </h3>\n        <div class=\"card__details\">\n          <ul>{renderTechnologies()}</ul>\n        </div>\n      </div>\n      <div class=\"card__side card__side--back\">\n        <div class=\"card__cta\">\n          <a\n            class=\"btn btn--white\"\n            href={repoLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Github repo\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n","import React from \"react\";\nimport ProjectCard from \"../Components/ProjectCard\";\n\nconst Projects = ({ projects }) => {\n  function renderProjects() {\n    if (projects) {\n      return projects.map((project, index) => {\n        return (\n          <ProjectCard\n            key={index}\n            repoLink={project.repoLink}\n            title={project.title}\n            technologies={project.technologies}\n            image={project.image}\n          />\n        );\n      });\n    }\n  }\n\n  return (\n    <section class=\"section-projects\" id=\"projects\">\n      <div class=\"projects-header\">\n        <h2 class=\"projects-header-text\">Projects</h2>\n      </div>\n      <div class=\"projects-container\">{renderProjects()}</div>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\n\nconst Footer = ({ github, resume, linkedin }) => {\n  return (\n    <footer class=\"footer\">\n      <div class=\"footer-logo-box\">\n        <img src=\"images/logo.png\" alt=\"Chris\" class=\"footer-logo\" />\n      </div>\n      <div class=\"footer-row\">\n        <div class=\"menu-container\">\n          <ul class=\"menu-list\">\n            <li class=\"menu-list-item\">\n              <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n                GITHUB\n              </a>\n            </li>\n            <li class=\"menu-list-item\">\n              <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n                LINKEDIN\n              </a>\n            </li>\n            <li class=\"menu-list-item\">\n              <a href={resume} target=\"_blank\" rel=\"noopener noreferrer\">\n                RESUME\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div class=\"text-container\">\n          <p class=\"footer-text\">Copyright &copy; 2019</p>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./Sections/Header\";\nimport Bio from \"./Sections/Bio\";\nimport Skills from \"./Sections/Skills\";\n// import ContactMe from \"./Sections/ContactMe\";\nimport Projects from \"./Sections/Projects\";\nimport Footer from \"./Sections/Footer\";\nimport ResumeInfo from \"./ResumeInfo\";\n\nfunction App() {\n  let {\n    name,\n    portrait_src,\n    skills,\n    projects,\n    bio_description,\n    resume_link,\n    github_link,\n    linkedin_link\n  } = ResumeInfo;\n\n  return (\n    <div>\n      <Header name={name} />\n      <main id=\"main\">\n        <Bio\n          name={name}\n          portrait_src={portrait_src}\n          bio_description={bio_description}\n        />\n        <Skills skills={skills} />\n        <Projects projects={projects} />\n        {/* <ContactMe /> */}\n      </main>\n      <Footer\n        github={github_link}\n        resume={resume_link}\n        linkedin={linkedin_link}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}